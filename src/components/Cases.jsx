import React, { useState, useEffect } from 'react'
import SectionHeader from './SectionHeader'
import SectionDescription from './SectionDescription'

const Cases = () => {
	const [currentSlide, setCurrentSlide] = useState(0) // –õ–æ–≥–∏—á–µ—Å–∫–∏–π –∏–Ω–¥–µ–∫—Å –¥–ª—è —Ç–æ—á–µ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
	const [position, setPosition] = useState(3) // –§–∏–∑–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è (–Ω–∞—á–∏–Ω–∞–µ–º —Å–æ –≤—Ç–æ—Ä–æ–π –∫–æ–ø–∏–∏)
	const [selectedCase, setSelectedCase] = useState(null)
	const [isHovered, setIsHovered] = useState(false)
	const [isTransitioning, setIsTransitioning] = useState(false)
	const [isManualNavigation, setIsManualNavigation] = useState(false) // –§–ª–∞–≥ –¥–ª—è —Ä—É—á–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
	const [isMobile, setIsMobile] = useState(false)

	// –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
	useEffect(() => {
		const checkMobile = () => {
			setIsMobile(window.innerWidth < 640)
		}
		checkMobile()
		window.addEventListener('resize', checkMobile)
		return () => window.removeEventListener('resize', checkMobile)
	}, [])

	const nextSlide = () => {
		if (isTransitioning) return
		setIsTransitioning(true)

		setPosition(prev => prev + 1)

		setTimeout(() => setIsTransitioning(false), 300)
	}

	const prevSlide = () => {
		if (isTransitioning) return
		setIsTransitioning(true)

		setPosition(prev => prev - 1)

		setTimeout(() => setIsTransitioning(false), 300)
	}

	const goToSlide = (index) => {
		if (isTransitioning) return
		setIsTransitioning(true)
		setIsManualNavigation(true)

		// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ç–æ—Ä—É—é –∫–æ–ø–∏—é –¥–ª—è —Ç–æ—á–µ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
		setCurrentSlide(index)
		setPosition(index + cases.length) // –í—Ç–æ—Ä–∞—è –∫–æ–ø–∏—è: –ø–æ–∑–∏—Ü–∏–∏ 3, 4, 5

		setTimeout(() => {
			setIsTransitioning(false)
			setIsManualNavigation(false)
		}, 300)
	}

	const openModal = (caseItem) => {
		setSelectedCase(caseItem)
		document.body.style.overflow = 'hidden'
	}

	const closeModal = () => {
		setSelectedCase(null)
		document.body.style.overflow = 'unset'
	}

	const truncateText = (text, limit = 120) => {
		const plainText = text.replace(/<[^>]*>/g, ' ').replace(/\s+/g, ' ').trim()
		if (plainText.length <= limit) return plainText
		return plainText.substring(0, limit) + '...'
	}
	const cases = [
		{
			id: 1,
			title: "–ü—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞—Ö–∞ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–∞",
			problem: "<em>\"–Ø –±–æ—é—Å—å –æ—Å—Ç–∞—Ç—å—Å—è –æ–¥–Ω–∞ –Ω–∞–≤—Å–µ–≥–¥–∞\"</em> ‚Äî —Å–∫–∞–∑–∞–ª–∞ –º–Ω–µ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ê–ª–µ–Ω–∞.<br/><br/>–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Å—Ç—Ä–∞—Ö –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–∞ –º–µ—à–∞–ª –µ–π —Å—Ç—Ä–æ–∏—Ç—å –∑–¥–æ—Ä–æ–≤—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è. –ö–∞–∂–¥–æ–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–ª–æ—Å—å –Ω–µ—É–¥–∞—á–µ–π –∏–∑-–∑–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –∏ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ä–∂–µ–Ω–∏—è.",
			solution: "–ß–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ P-DTR —è –Ω–∞—à–ª–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—Å—å –≤ –µ—ë —Ç–µ–ª–µ:<br/><br/>‚Ä¢ <strong>–ì—Ä—É–¥–Ω–∞—è –∫–ª–µ—Ç–∫–∞</strong> ‚Äî –±–æ–ª—å –æ—Ç –ø–µ—Ä–≤–æ–≥–æ —Ä–∞—Å—Å—Ç–∞–≤–∞–Ω–∏—è<br/>‚Ä¢ <strong>–ñ–∏–≤–æ—Ç</strong> ‚Äî —Å—Ç—Ä–∞—Ö –æ—Ç–≤–µ—Ä–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π —Ç—è–Ω—É–ª—Å—è –∏–∑ –¥–µ—Ç—Å—Ç–≤–∞<br/>‚Ä¢ <strong>–ü–ª–µ—á–∏</strong> ‚Äî —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –æ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –∑–∞—â–∏—Ç–µ<br/><br/>–†–∞–±–æ—Ç–∞–ª–∏ —Å –∫–∞–∂–¥–æ–π –∑–æ–Ω–æ–π –æ—Ç–¥–µ–ª—å–Ω–æ, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è –Ω–æ—Ä–º–∞–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É —Ä–µ—Ü–µ–ø—Ç–æ—Ä–æ–≤ –∏ –æ—Å–≤–æ–±–æ–∂–¥–∞—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–º–æ—Ü–∏–∏.",
			result: "–ü–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã –ê–ª–µ–Ω–∞ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∞ –ª—ë–≥–∫–æ—Å—Ç—å –≤ —Ç–µ–ª–µ –∏ –¥—É—à–µ:<br/><br/>‚Ä¢ –ò—Å—á–µ–∑ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Å—Ç—Ä–∞—Ö –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–∞<br/>‚Ä¢ –ü–æ—è–≤–∏–ª–∞—Å—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –æ–±—â–µ–Ω–∏–∏<br/>‚Ä¢ –ß–µ—Ä–µ–∑ –º–µ—Å—è—Ü –≤—Å—Ç—Ä–µ—Ç–∏–ª–∞ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Ü–µ–Ω–∏—Ç –µ—ë<br/>‚Ä¢ –ù–∞—É—á–∏–ª–∞—Å—å —Å—Ç—Ä–æ–∏—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è –±–µ–∑ —Å—Ç—Ä–∞—Ö–∞ –æ—Ç–≤–µ—Ä–∂–µ–Ω–∏—è<br/><br/><em>\"–Ø –±–æ–ª—å—à–µ –Ω–µ –±–æ—é—Å—å –±—ã—Ç—å —Å–æ–±–æ–π –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö\"</em> ‚Äî –≥–æ–≤–æ—Ä–∏—Ç –ê–ª–µ–Ω–∞ —Å–µ–π—á–∞—Å.",
			duration: "6 —Å–µ–∞–Ω—Å–æ–≤"
		},
		{
			id: 2,
			title: "–ú–∏–≥—Ä–µ–Ω—å: —Å–≤—è–∑—å —Å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –±–ª–æ–∫–∞–º–∏",
			problem: "–î–µ–≤—É—à–∫–∞ 30 –ª–µ—Ç –æ–±—Ä–∞—Ç–∏–ª–∞—Å—å —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–æ –º–∏–≥—Ä–µ–Ω–∏. –ú–∏–≥—Ä–µ–Ω—å –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è —Å 6 –ª–µ—Ç ‚Äî –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤—Å—é —Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—É—é –∂–∏–∑–Ω—å.<br/><br/>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Å–ª—É—á–∞—è:<br/>‚Ä¢ –ê–Ω–∞–º–Ω–µ–∑ –Ω–µ –≤—ã—è–≤–∏–ª —Ç—Ä–∞–≤–º –≥–æ–ª–æ–≤—ã –∏–ª–∏ —à–µ–∏ –¥–æ 6 –ª–µ—Ç<br/>‚Ä¢ –í 9 –ª–µ—Ç –±—ã–ª–∞ —Ç—Ä–∞–≤–º–∞ –ª–±–∞<br/>‚Ä¢ –° –Ω–∞—á–∞–ª–æ–º –º–µ—Å—è—á–Ω—ã—Ö –º–∏–≥—Ä–µ–Ω—å \"–ø—Ä–∏–≤—è–∑–∞–ª–∞—Å—å\" –∫ —Ü–∏–∫–ª—É<br/>‚Ä¢ –ù–µ–¥–∞–≤–Ω—è—è –æ–ø–µ—Ä–∞—Ü–∏—è –Ω–∞ —è–∏—á–Ω–∏–∫–µ –∏ –¥—Ä—É–≥–∏–µ \"–∂–µ–Ω—Å–∫–∏–µ\" –ø—Ä–æ–±–ª–µ–º—ã<br/><br/>–ú—ã—à—Ü—ã —à–µ–∏ –∏ —Ç–µ–ª–∞ —Å–∏–ª—å–Ω—ã–µ, —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏—á–∏–Ω –¥–ª—è —Ç–∞–∫–æ–π –∫–ª–∏–Ω–∏–∫–∏ –Ω–µ –±—ã–ª–æ. –ö–ª–∏–µ–Ω—Ç–∫–∞ –Ω–µ –º–æ–≥–ª–∞ –≤—Å–ø–æ–º–Ω–∏—Ç—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–π –≤ –¥–µ—Ç—Å—Ç–≤–µ.",
			solution: "–í–∫–ª—é—á–∏–ª—Å—è –º–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å üîç<br/><br/>–°–æ–≤–º–µ—Å—Ç–Ω–æ —Å –º–∞–Ω—É–∞–ª—å–Ω–æ-–º—ã—à–µ—á–Ω—ã–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤—ã—à–ª–∏ –Ω–∞ –∫–ª—é—á–µ–≤—É—é —ç–º–æ—Ü–∏—é:<br/>‚Ä¢ <strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> 5 –ª–µ—Ç<br/>‚Ä¢ <strong>–¢—Ä–∏–≥–≥–µ—Ä:</strong> –æ—Ç–µ—Ü<br/>‚Ä¢ <strong>–°–æ–±—ã—Ç–∏–µ:</strong> —É—Ö–æ–¥ –æ—Ç—Ü–∞ –∏–∑ —Å–µ–º—å–∏<br/><br/>–í –≤–æ–∑—Ä–∞—Å—Ç–µ 5 –ª–µ—Ç –∫–ª–∏–µ–Ω—Ç–∫–∞ –ø–µ—Ä–µ–∂–∏–ª–∞ —É—Ö–æ–¥ –æ—Ç—Ü–∞, —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–≤—à–∏–π—Å—è —Å–∏–ª—å–Ω—ã–º —Å—Ç—Ä–∞—Ö–æ–º –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —Å—Ç—Ä–µ—Å—Å–æ–º. –°—Ç—Ä–µ—Å—Å –±—ã–ª –Ω–∞—Å—Ç–æ–ª—å–∫–æ —Å–∏–ª—å–Ω—ã–º, —á—Ç–æ –Ω–µ—Ä–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∞ —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ –∏–∑ –ø–∞–º—è—Ç–∏.<br/><br/>–ü—Ä–æ–≤–µ–ª–∏ –æ–¥–Ω—É –∏–∑ —Å–∞–º—ã—Ö —Ç—è–∂–µ–ª—ã—Ö –ø—Å–∏—Ö–æ—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ü–∏–π ‚Äî –≤–º–µ—Å—Ç–µ —Å–æ —Å–ª–µ–∑–∞–º–∏ –Ω–∞ –≥–ª–∞–∑–∞—Ö.",
			result: "–°–ø—É—Å—Ç—è –Ω–µ–¥–µ–ª—é –ø–æ—Å–ª–µ —Å–µ–∞–Ω—Å–∞:<br/><br/>‚Ä¢ <strong>–ú–∏–≥—Ä–µ–Ω–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å—á–µ–∑–ª–∏</strong><br/>‚Ä¢ –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–ª—Å—è –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω—ã–π —Ü–∏–∫–ª<br/>‚Ä¢ –£–ª—É—á—à–∏–ª–æ—Å—å –æ–±—â–µ–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ<br/>‚Ä¢ –ö–ª–∏–µ–Ω—Ç–∫–∞ —Å–º–æ–≥–ª–∞ –≤—Å–ø–æ–º–Ω–∏—Ç—å –∏ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ—Ç—Å–∫—É—é —Ç—Ä–∞–≤–º—É<br/><br/><em>\"–Ø –Ω–µ –º–æ–≥–ª–∞ –ø–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –±–æ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –º—É—á–∏–ª–∞ –º–µ–Ω—è 24 –≥–æ–¥–∞, —É—à–ª–∞ –∑–∞ –æ–¥–∏–Ω —Å–µ–∞–Ω—Å. –û–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è, —Ç–µ–ª–æ –ø–æ–º–Ω–∏–ª–æ —Ç–æ, —á—Ç–æ –∑–∞–±—ã–ª —Ä–∞–∑—É–º.\"</em>",
			duration: "1 —Å–µ–∞–Ω—Å"
		},
		{
			id: 3,
			title: "–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ —Å–≤–µ—Ç—É",
			problem: "–ö–ª–∏–µ–Ω—Ç–∫–∞ –∂–∞–ª–æ–≤–∞–ª–∞—Å—å –Ω–∞ —Å–∏–ª—å–Ω—ã–π –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç –æ—Ç —Å–≤–µ—Ç–∞:<br/><br/>‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º—É –æ—Å–≤–µ—â–µ–Ω–∏—é<br/>‚Ä¢ –î–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç –ø—Ä–∏ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ –Ω–∞ —É–ª–∏—Ü–µ –≤ —Å–≤–µ—Ç–ª–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫<br/>‚Ä¢ –ò–∑–±–µ–≥–∞–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Å–≤–µ—â–µ–Ω–∏—è –¥–æ–º–∞<br/>‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –Ω–æ—à–µ–Ω–∏–µ —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã—Ö –æ—á–∫–æ–≤<br/><br/>–ü—Ä–æ–±–ª–µ–º–∞ —Å–µ—Ä—å–µ–∑–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–ª–∞ –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏ ‚Äî –∫–ª–∏–µ–Ω—Ç–∫–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –º–æ–≥–ª–∞ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –æ—Å–≤–µ—â–µ–Ω–Ω—ã—Ö –ø–æ–º–µ—â–µ–Ω–∏—è—Ö.",
			solution: "–° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ P-DTR –º—ã –≤—ã—à–ª–∏ –Ω–∞ –∏—Å—Ç–∏–Ω–Ω—É—é –ø—Ä–∏—á–∏–Ω—É —Ç–∞–∫–æ–π —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–≤–µ—Ç:<br/><br/><strong>–ù–∞–π–¥–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞:</strong> –¥–∏—Å—Ñ—É–Ω–∫—Ü–∏—è –≤ –∑–æ–Ω–µ –Ω–æ—Å–∞, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å —Ä–∞–Ω–µ–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω–æ–π —Ç—Ä–∞–≤–º–æ–π.<br/><br/><strong>–ú–µ—Ö–∞–Ω–∏–∑–º –Ω–∞—Ä—É—à–µ–Ω–∏—è:</strong><br/>‚Ä¢ –¢—Ä–∞–≤–º–∞ –ø–æ–≤–ª–∏—è–ª–∞ –Ω–∞ <em>—Ç—Ä–æ–π–Ω–∏—á–Ω—ã–π –Ω–µ—Ä–≤</em>, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –ª–∏—Ü–∞ –∏ –≥–ª–∞–∑<br/>‚Ä¢ –ù–∞—Ä—É—à–∏–ª–∞—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–µ—Ç–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ<br/>‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∫ –≤–Ω–µ—à–Ω–∏–º —Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—è–º –¥–∞–ª–∞ —Å–±–æ–π<br/>‚Ä¢ –û–±—ã—á–Ω—ã–π —Å–≤–µ—Ç —Å—Ç–∞–ª –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—Ç—å—Å—è –∫–∞–∫ —á—Ä–µ–∑–º–µ—Ä–Ω–æ —è—Ä–∫–∏–π<br/><br/>–†–∞–±–æ—Ç–∞–ª–∏ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ—Ü–µ–ø—Ç–æ—Ä–æ–≤ –≤ –Ω–æ—Å–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏.",
			result: "–ü–æ—Å–ª–µ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –¥–∏—Å—Ñ—É–Ω–∫—Ü–∏–∏:<br/><br/>‚Ä¢ –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ —Å–≤–µ—Ç—É –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–ª–∞—Å—å<br/>‚Ä¢ –ö–ª–∏–µ–Ω—Ç–∫–∞ —Å–º–æ–≥–ª–∞ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ —É–ª–∏—Ü–µ –±–µ–∑ –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç–∞<br/>‚Ä¢ –í–µ—Ä–Ω—É–ª–∞—Å—å –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –æ–±—ã—á–Ω–æ–≥–æ –æ—Å–≤–µ—â–µ–Ω–∏—è –¥–æ–º–∞<br/>‚Ä¢ –ò—Å—á–µ–∑–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –Ω–æ—Å–∏—Ç—å —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏<br/>‚Ä¢ –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∏–ª–æ—Å—å –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏<br/><br/><em>\"–Ø –∑–∞–±—ã–ª–∞, –∫–∞–∫–æ–≤–æ —ç—Ç–æ ‚Äî –≤–∏–¥–µ—Ç—å –º–∏—Ä –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –¢–µ–ø–µ—Ä—å —è –º–æ–≥—É –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è —Å–æ–ª–Ω–µ—á–Ω—ã–º–∏ –¥–Ω—è–º–∏!\"</em><br/><br/>–≠—Ç–æ—Ç —Å–ª—É—á–∞–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ —Å–∫—Ä—ã—Ç—ã–µ —Ç—Ä–∞–≤–º—ã –º–æ–≥—É—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã.",
			duration: "4 —Å–µ–∞–Ω—Å–∞"
		}
	]

	// –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –¥–ª—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ (best practice)
	const getExtendedCases = () => {
		return [...cases, ...cases, ...cases] // 3 –∫–æ–ø–∏–∏ - –º–∏–Ω–∏–º—É–º –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
	}

	const extendedCases = getExtendedCases()

	// –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è currentSlide —Å position (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏)
	useEffect(() => {
		if (!isManualNavigation) {
			// –î–ª—è 3 –∫–æ–ø–∏–π: –ø–æ–∑–∏—Ü–∏—è 3,4,5 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–ª–∞–π–¥–∞–º 0,1,2
			const slideIndex = position - cases.length
			if (slideIndex >= 0 && slideIndex < cases.length) {
				setCurrentSlide(slideIndex)
			}
		}
	}, [position, cases.length, isManualNavigation])

	// Best practice: –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π —Å–±—Ä–æ—Å –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
	useEffect(() => {
		if (!isTransitioning && !isManualNavigation) {
			// –ö–æ–≥–¥–∞ –¥–æ—Ö–æ–¥–∏–º –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∫–æ–ø–∏–∏ - –ø–µ—Ä–µ–ø—Ä—ã–≥–∏–≤–∞–µ–º –∫ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ –≤ —Å—Ä–µ–¥–Ω–µ–π –∫–æ–ø–∏–∏
			if (position >= extendedCases.length - cases.length) {
				const equivalentPosition = position - cases.length
				setPosition(equivalentPosition)
			}
			// –ö–æ–≥–¥–∞ –¥–æ—Ö–æ–¥–∏–º –¥–æ –ø–µ—Ä–≤–æ–π –∫–æ–ø–∏–∏ - –ø–µ—Ä–µ–ø—Ä—ã–≥–∏–≤–∞–µ–º –∫ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ –≤ —Å—Ä–µ–¥–Ω–µ–π –∫–æ–ø–∏–∏
			else if (position < cases.length) {
				const equivalentPosition = position + cases.length
				setPosition(equivalentPosition)
			}
		}
	}, [position, isTransitioning, isManualNavigation, cases.length, extendedCases.length])

	return (
		<section id="cases" className="relative py-12 sm:py-16 lg:py-24 bg-gradient-to-br from-slate-800 via-slate-700 to-ocean-800 overflow-hidden">
			{/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Ñ–æ–Ω –≤ —Å—Ç–∏–ª–µ Hero */}
			<div className="absolute inset-0">
				{/* –û—Å–Ω–æ–≤–Ω–æ–π –≥—Ä–∞–¥–∏–µ–Ω—Ç */}
				<div className="absolute inset-0 bg-gradient-to-br from-ocean-600/10 via-transparent to-slate-900/30"></div>

				{/* –°—Ç–∞—Ç–∏—á–Ω—ã–µ –∫—Ä—É–≥–∏ */}
				<div className="absolute top-1/4 right-1/4 w-96 h-96 bg-ocean-400/5 rounded-full blur-3xl"></div>
				<div className="absolute bottom-1/3 left-1/4 w-80 h-80 bg-blue-400/5 rounded-full blur-3xl"></div>
				<div className="absolute top-2/3 right-1/3 w-64 h-64 bg-cyan-400/5 rounded-full blur-3xl"></div>

				{/* –°–µ—Ç–∫–∞ —Ç–æ—á–µ–∫ */}
				<div className="absolute inset-0 opacity-20">
					<div
						className="w-full h-full"
						style={{
							backgroundImage: `radial-gradient(circle, rgba(59, 130, 246, 0.2) 1px, transparent 1px)`,
							backgroundSize: '60px 60px'
						}}
					></div>
				</div>

				{/* –î–∏–∞–≥–æ–Ω–∞–ª—å–Ω—ã–µ –ª–∏–Ω–∏–∏ */}
				<div className="absolute inset-0">
					<div className="absolute top-1/4 left-0 w-full h-px bg-gradient-to-r from-transparent via-ocean-400/20 to-transparent transform rotate-6 origin-left"></div>
					<div className="absolute top-2/3 left-0 w-full h-px bg-gradient-to-r from-transparent via-blue-400/15 to-transparent transform -rotate-3 origin-left"></div>
				</div>
			</div>

			<div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 z-10">
				<div className="text-center mb-12 sm:mb-16">
					<SectionHeader title="–ö–µ–π—Å—ã –∏–∑ –ø—Ä–∞–∫—Ç–∏–∫–∏" isDarkMode={true} />
					<SectionDescription text="–†–µ–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∑–¥–æ—Ä–æ–≤—å–µ —Å –ø–æ–º–æ—â—å—é P-DTR –º–µ—Ç–æ–¥–∞" isDarkMode={true} />
				</div>

				{/* Carousel Container */}
				<div
					className="relative max-w-6xl mx-auto group"
					onMouseEnter={() => setIsHovered(true)}
					onMouseLeave={() => setIsHovered(false)}
				>
					{/* Carousel */}
					<div className="relative rounded-2xl">
						<div
							className="flex transition-transform duration-300 ease-in-out"
							style={{
								transform: isMobile
									? `translateX(calc(-${position * 92}% + 4%))`
									: `translateX(calc(-${position * 80}% + 10%))`
							}}
						>
							{extendedCases.map((caseItem, index) => {
								// –ê–∫—Ç–∏–≤–µ–Ω —Å–ª–∞–π–¥ –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ position
								const isActive = index === position
								// –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
								const uniqueKey = `${caseItem.id}-${Math.floor(index / cases.length)}-${index}`
								return (
									<div key={uniqueKey} className="w-[92%] sm:w-4/5 flex-shrink-0 px-2 sm:px-4">
										<div className={`bg-white/95 backdrop-blur-sm border border-ocean-200/50 rounded-xl sm:rounded-2xl p-4 sm:p-6 lg:p-8 shadow-lg transition-all duration-300 ${isActive
											? 'scale-100 opacity-100'
											: 'scale-95 opacity-60'
											}`}>
											{/* Case Header with Number */}
											<div className="flex items-start gap-3 sm:gap-4 mb-4 sm:mb-6">
												<div className="flex-shrink-0 w-12 h-12 sm:w-14 sm:h-14 lg:w-16 lg:h-16 bg-gradient-to-r from-ocean-600 to-ocean-600 text-white rounded-lg sm:rounded-xl flex items-center justify-center text-xl sm:text-2xl font-medium">
													{String(caseItem.id).padStart(2, '0')}
												</div>
												<div className="flex-1 min-w-0">
													<h3 className="text-lg sm:text-xl lg:text-2xl font-regular text-slate-700 break-words leading-5">
														{caseItem.title}
													</h3>
													<div className="text-xs sm:text-md text-ocean-600 font-regular mt-1">
														{caseItem.duration}
													</div>
												</div>
											</div>

											{/* Problem Preview */}
											<div className="mb-4 sm:mb-6">
												<h4 className="text-xs sm:text-sm font-medium text-red-600 uppercase tracking-wide mb-2">
													–ü—Ä–æ–±–ª–µ–º–∞
												</h4>
												<p className="text-sm sm:text-base text-slate-600 leading-relaxed">
													{truncateText(caseItem.problem, isMobile ? 100 : 120)}
												</p>
											</div>

											{/* Solution Preview */}
											<div className="mb-4 sm:mb-6">
												<h4 className="text-xs sm:text-sm font-medium text-ocean-600 uppercase tracking-wide mb-2">
													–†–µ—à–µ–Ω–∏–µ
												</h4>
												<p className="text-sm sm:text-base text-slate-700 leading-relaxed">
													{truncateText(caseItem.solution, isMobile ? 100 : 120)}
												</p>
											</div>

											{/* Result Preview */}
											<div className="mb-4 sm:mb-6">
												<h4 className="text-xs sm:text-sm font-medium text-green-600 uppercase tracking-wide mb-2">
													–†–µ–∑—É–ª—å—Ç–∞—Ç
												</h4>
												<p className="text-sm sm:text-base text-slate-700 leading-relaxed">
													{truncateText(caseItem.result, isMobile ? 100 : 120)}
												</p>
											</div>

											{/* Read More Button */}
											<div className="pt-3 sm:pt-4 border-t border-slate-200">
												<button
													onClick={() => openModal(caseItem)}
													className="inline-flex items-center gap-2 text-ocean-600 hover:text-ocean-700 font-medium text-xs sm:text-sm transition-colors duration-200"
												>
													<svg className="w-3 h-3 sm:w-4 sm:h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
														<path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
													</svg>
													–ß–∏—Ç–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ
												</button>
											</div>
										</div>
									</div>
								)
							})}
						</div>
					</div>

					{/* Navigation Dots and Controls */}
					<div className="flex justify-center items-center mt-6 sm:mt-8 gap-4">
						<div className="flex gap-2">
							{cases.map((_, index) => (
								<button
									key={index}
									onClick={() => goToSlide(index)}
									className={`w-2 h-2 sm:w-3 sm:h-3 rounded-full transition-all duration-200 ${index === currentSlide
										? 'bg-ocean-400'
										: 'bg-ocean-200 hover:bg-ocean-300'
										}`}
								/>
							))}
						</div>
					</div>

					{/* Navigation Arrows */}
					<button
						onClick={prevSlide}
						className={`absolute left-0 sm:left-0 top-1/2 -translate-y-1/2 bg-white/90 hover:bg-white hover:scale-110 text-ocean-600 p-2 sm:p-3 lg:p-4 rounded-full shadow-xl transition-all duration-300 backdrop-blur-sm transform hover:shadow-2xl hover:shadow-ocean-500/25 z-10 ${isHovered ? 'opacity-100 translate-x-0' : 'opacity-100 -translate-x-1 sm:-translate-x-2'
							}`}
					>
						<svg className="w-5 h-5 lg:w-6 lg:h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
						</svg>
					</button>
					<button
						onClick={nextSlide}
						className={`absolute right-0 sm:right-0 top-1/2 -translate-y-1/2 bg-white/90 hover:bg-white hover:scale-110 text-ocean-600 p-2 sm:p-3 lg:p-4 rounded-full shadow-xl transition-all duration-300 backdrop-blur-sm transform hover:shadow-2xl hover:shadow-ocean-500/25 z-10 ${isHovered ? 'opacity-100 translate-x-0' : 'opacity-100 translate-x-1 sm:translate-x-2'
							}`}
					>
						<svg className="w-5 h-5 lg:w-6 lg:h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
						</svg>
					</button>
				</div>

				{/* CTA */}
				<div className="text-center mt-12 sm:mt-16 px-4">
					<p className="text-sm sm:text-base text-slate-200 mb-4 sm:mb-6">
						–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ç–∞–∫–∏–µ –∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã?
					</p>
					<a
						href="https://t.me/maria_pdtr"
						target="_blank"
						className="inline-flex items-center gap-2 bg-gradient-to-r from-ocean-600 to-ocean-600 text-white px-4 py-3 sm:px-8 sm:py-4 rounded-full hover:bg-ocean-500 transition-all duration-300 shadow-lg hover:shadow-ocean-500/25 text-sm sm:text-base font-light"
					>
						<svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
						</svg>
						–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
					</a>
				</div>
			</div>

			{/* Modal */}
			{selectedCase && (
				<div className="fixed inset-0 bg-black/50 flex items-center justify-center p-2 sm:p-4 z-50" onClick={closeModal}>
					<div
						className="bg-white rounded-xl sm:rounded-2xl max-w-4xl w-full max-h-[90vh] flex flex-col"
						onClick={(e) => e.stopPropagation()}
					>
						{/* Modal Header - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∞–ø–∫–∞ */}
						<div className="flex-shrink-0 bg-white border-b border-gray-200 p-4 sm:p-6 flex items-center justify-between rounded-t-xl sm:rounded-t-2xl">
							<div className="flex items-start gap-3 sm:gap-4 flex-1 min-w-0 pr-2">
								<div className="flex-shrink-0 w-10 h-10 sm:w-12 sm:h-12 bg-gradient-to-r from-ocean-600 to-ocean-600 text-white rounded-lg sm:rounded-xl flex items-center justify-center text-base sm:text-lg font-medium">
									{String(selectedCase.id).padStart(2, '0')}
								</div>
								<div className="flex-1 min-w-0">
									<h3 className="text-base sm:text-xl lg:text-2xl font-medium text-slate-700 break-words leading-5">
										{selectedCase.title}
									</h3>
									<div className="text-xs sm:text-sm text-ocean-600 font-medium mt-1">
										{selectedCase.duration}
									</div>
								</div>
							</div>
							<button
								onClick={closeModal}
								className="flex-shrink-0 p-1.5 sm:p-2 hover:bg-gray-100 rounded-lg transition-colors"
							>
								<svg className="w-5 h-5 sm:w-6 sm:h-6 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
								</svg>
							</button>
						</div>

						{/* Modal Content - —Å–∫—Ä–æ–ª–ª–∏—Ä—É–µ–º–∞—è –æ–±–ª–∞—Å—Ç—å */}
						<div className="flex-1 overflow-auto p-4 sm:p-6 space-y-6 sm:space-y-8 rounded-b-xl sm:rounded-b-2xl">
							{/* Problem */}
							<div>
								<h4 className="text-base sm:text-lg font-semibold text-red-600 mb-2 sm:mb-3">
									–ü—Ä–æ–±–ª–µ–º–∞
								</h4>
								<div
									className="text-sm sm:text-base text-slate-600 leading-relaxed"
									dangerouslySetInnerHTML={{ __html: selectedCase.problem }}
								/>
							</div>

							{/* Solution */}
							<div>
								<h4 className="text-base sm:text-lg font-semibold text-ocean-600 mb-2 sm:mb-3">
									–†–µ—à–µ–Ω–∏–µ
								</h4>
								<div
									className="text-sm sm:text-base text-slate-700 leading-relaxed"
									dangerouslySetInnerHTML={{ __html: selectedCase.solution }}
								/>
							</div>

							{/* Result */}
							<div>
								<h4 className="text-base sm:text-lg font-semibold text-green-600 mb-2 sm:mb-3">
									–†–µ–∑—É–ª—å—Ç–∞—Ç
								</h4>
								<div
									className="text-sm sm:text-base text-slate-700 leading-relaxed"
									dangerouslySetInnerHTML={{ __html: selectedCase.result }}
								/>
							</div>
						</div>
					</div>
				</div>
			)}
		</section>
	)
}

export default Cases